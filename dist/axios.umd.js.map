{"version":3,"file":"axios.umd.js","sources":["../src/helpers/util.ts","../src/helpers/header.ts","../src/helpers/error.ts","../src/helpers/url.ts","../src/helpers/cookie.ts","../src/core/xhr.ts","../src/core/transform.ts","../src/core/dispatchRequest.ts","../src/core/interceptor.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/helpers/data.ts","../src/defaults.ts","../src/cancel/cancel.ts","../src/cancel/cancelToken.ts","../src/axios.ts"],"sourcesContent":["import { URLSearchParams } from 'url'\n\n// 判断数据类型\nconst toString = Object.prototype.toString\n\n/**\n * val is xxx 是ts中的类型保护语法，将参数默认为某个数据类型，并拥有该类型的特性以及使用其相关方法\n */\n\n/**\n *\n * 日期类型\n * @export\n * @param {*} val\n * @returns {val is Date}\n */\nexport function isDate(val: any): val is Date {\n  return toString.call(val) === '[object Date]'\n}\n\n/**\n *\n * 对象类型\n * @export\n * @param {*} val\n * @returns {val is Object}\n */\nexport function isObject(val: any): val is Object {\n  return val !== null && typeof val === 'object'\n}\n/**\n *\n * 判断是不是普通对象，因为formData,arrayBuffer这些类型的参数使用isObject判断都是一个对象\n * @export\n * @param {*} val\n * @returns {val is Object}\n */\nexport function isPlainObject(val: any): val is Object {\n  return toString.call(val) === '[object Object]'\n}\n\nexport function isFormData(val: any): val is FormData {\n  return typeof val !== null && val instanceof window.FormData\n}\n\nexport function isURLSearchParams(val: any): val is URLSearchParams {\n  return typeof val !== 'undefined' && val instanceof window.URLSearchParams\n}\n\n/**\n * 使用TS的交叉类型，定义两个泛型，将from中的属性拷贝到to中，并使用类型断言确定数据类型\n * @param to\n * @param from\n */\nexport function extend<T, U>(to: T, from: U): T & U {\n  for (const key in from) {\n    ;(to as T & U)[key] = from[key] as any\n  }\n\n  return to as T & U\n}\n\n/**\n * 对象深拷贝\n * @param objs 被拷贝的多个对象\n */\nexport function deepMerge(...objs: any[]): any {\n  const result = Object.create(null)\n\n  objs.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key]\n        // val可能又是一个对象，需要递归处理\n        if (isPlainObject(val)) {\n          // result[key]是否已经存在并且是一个对象，已存在并且是一个对象的话，把对象跟值一起作为被拷贝的一部分传入\n          if (isPlainObject(result[key])) {\n            result[key] = deepMerge(result[key], val)\n          } else {\n            result[key] = deepMerge(val)\n          }\n        } else {\n          result[key] = val\n        }\n      })\n    }\n  })\n\n  return result\n}\n","import { isPlainObject, deepMerge } from './util'\nimport { Method } from '../types'\n\n/**\n * 格式化header请求头参数\n * @param headers 请求头参数对象\n * @param normalizeName 要格式化的数据value名称\n */\nfunction normalizeHeaderName(headers: any, normalizeName: string): void {\n  if (!headers) {\n    return\n  }\n  Object.keys(headers).forEach(name => {\n    if (name !== normalizeName && name.toUpperCase() === normalizeName.toUpperCase()) {\n      headers[normalizeName] = headers[name]\n      delete headers[name]\n    }\n  })\n}\n\n/**\n * 设置默认的请求头 & 规范化请求头\n * 根据传递到后端的data来设置默认的请求头数据\n * @param headers 请求头参数对象\n * @param data 请求头数据\n */\nexport function processHeaders(headers: any, data: any): any {\n  normalizeHeaderName(headers, 'Content-Type')\n  if (isPlainObject(data)) {\n    if (headers && !headers['Content-Type']) {\n      headers['Content-Type'] = 'application/json;charset=utf-8'\n    }\n  }\n  return headers\n}\n\n/**\n * 格式化响应headers的数据，数据通过req.getAllResponseHeaders()方法得来\n * @param headers 以回车符与换行符分割的字符串\n * params example :\n * `\n *  date: Fri, 05 Apr 2019 12:40:49 GMT\\r\\n\n *  etag: W/\"d-Ssxx4FRxEutDLwo2+xkkxKc4y0k\"\\r\\n\n *  connection: keep-alive\\r\\n\n *  x-powered-by: Express\\r\\n\n *  content-length: 13\\r\\n\n *  content-type: application/json; charset=utf-8\\r\\n\n * `\n */\nexport function parseHeaders(headers: string): any {\n  let parsed = Object.create(null)\n  if (!headers) {\n    return parsed\n  }\n\n  headers.split('\\r\\n').forEach(line => {\n    let [key, ...values] = line.split(':')\n    key = key.trim().toLowerCase()\n    if (!key) {\n      return\n    }\n    const val = values.join(':').trim()\n\n    parsed[key] = val\n  })\n  return parsed\n}\n\n/**\n * 在defaults对象中定义的默认配置是可以从 请求方法的维度 进行配置的，就是针对不同请求有各自的公共配置\n * 在不同请求方法下应该把此次请求所需要的header提取出来，其他的则删除掉\n * @param headers 请求的headers\n * @param method 请求的method\n */\nexport function flattenHeaders(headers: any, method: Method): any {\n  if (!headers) {\n    return headers\n  }\n  headers = deepMerge(headers.common, headers[method], headers)\n  const methodsToDelete = ['delete', 'get', 'head', 'options', 'post', 'put', 'patch', 'common']\n  methodsToDelete.forEach(method => {\n    delete headers[method]\n  })\n\n  return headers\n}\n","import { AxiosRequestConfig, AxiosResponse } from '../types'\n\nexport class AxiosError extends Error {\n  isAxiosError: boolean\n  config: AxiosRequestConfig\n  code?: string | null\n  request?: any\n  response?: AxiosResponse\n\n  constructor(\n    message: string,\n    config: AxiosRequestConfig,\n    code?: string | null,\n    request?: any,\n    response?: AxiosResponse\n  ) {\n    super(message)\n\n    this.config = config\n    this.code = code\n    this.request = request\n    this.response = response\n    this.isAxiosError = true\n\n    Object.setPrototypeOf(this, AxiosError.prototype)\n  }\n}\n\nexport function createError(\n  message: string,\n  config: AxiosRequestConfig,\n  code?: string | null,\n  request?: any,\n  response?: AxiosResponse\n): AxiosError {\n  const error = new AxiosError(message, config, code, request, response)\n  return error\n}\n","import { isDate, isPlainObject, isURLSearchParams } from './util'\n\n/**\n *\n * 参数编码函数,对于特殊字符需要做一层替换处理\n * 对于字符 @、:、$、,、[、]、 是允许出现在 url 中的，不希望被 encode\n * @param {string} val\n * @returns {string}\n */\nfunction encode(val: string): string {\n  return encodeURIComponent(val)\n    .replace(/%40/g, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\n/**\n *\n * 处理请求url参数\n * @export\n * @param {string} url\n * @param {*} [params]\n * @returns {string}\n */\nexport function buildURL(\n  url: string,\n  params?: any,\n  paramsSerializer?: (params: any) => string\n): string {\n  if (!params) {\n    return url\n  }\n\n  let serializeParams\n\n  if (paramsSerializer) {\n    serializeParams = paramsSerializer(params)\n  } else if (isURLSearchParams(params)) {\n    serializeParams = params.toString()\n  } else {\n    const parts: string[] = []\n    Object.keys(params).forEach(key => {\n      const val = params[key]\n      if (val === null || typeof val === 'undefined') {\n        return\n      }\n      let values = []\n      // 参数有可能是一个数组\n      if (Array.isArray(val)) {\n        values = val\n        key += '[]'\n      } else {\n        // 变成一个数组做统一处理\n        values = [val]\n      }\n      values.forEach(val => {\n        if (isDate(val)) {\n          val = val.toISOString()\n        } else if (isPlainObject(val)) {\n          val = JSON.stringify(val)\n        }\n        parts.push(`${encode(key)}=${encode(val)}`)\n      })\n    })\n\n    serializeParams = parts.join('&')\n  }\n\n  if (serializeParams) {\n    // 丢弃 url 中的哈希标记\n    const markIndex = url.indexOf('#')\n    if (markIndex !== -1) {\n      url = url.slice(0, markIndex)\n    }\n    // 有可能url上已经带有参数了，判断条件就是看下是否含有问号,没有则加？，否则往现有url后面添加&\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializeParams\n  }\n  return url\n}\n\ninterface URLOrigin {\n  protocol: string\n  host: string\n}\n\n/**\n * 是否是同源请求的判断函数\n * @param requestURL url链接\n */\nexport function isURLSameOrigin(requestURL: string): boolean {\n  const parsedOrigin = resolveURL(requestURL)\n  return (\n    parsedOrigin.protocol === currentOrigin.protocol && parsedOrigin.host === currentOrigin.host\n  )\n}\n\nconst currentOrigin = resolveURL(window.location.href)\n\nfunction resolveURL(url: string): URLOrigin {\n  const urlParsingNode = document.createElement('a')\n  urlParsingNode.setAttribute('href', url)\n  const { protocol, host } = urlParsingNode\n  return {\n    protocol,\n    host\n  }\n}\n\nexport function isAbsoluteURL(url: string): boolean {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n}\n\nexport function combineURL(baseURL: string, relativeURL?: string): string {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL\n}\n","const cookie = {\n  read(name: string): string | null {\n    const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'))\n    return match ? decodeURIComponent(match[3]) : null\n  }\n}\n\nexport default cookie\n","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport { parseHeaders } from '../helpers/header'\nimport { createError } from '../helpers/error'\nimport { isURLSameOrigin } from '../helpers/url'\nimport cookie from '../helpers/cookie'\nimport { isFormData } from '../helpers/util'\n\n/**\n * 基于XMLHttpRequest对象封装请求函数\n * @param {AxiosRequestConfig} config 请求配置【包括请求参数，请求url，请求方式，请求头，响应类型，请求超时时间】\n */\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise {\n  return new Promise((resolve, reject) => {\n    const {\n      data = null,\n      url,\n      method,\n      headers = {},\n      responseType,\n      timeout,\n      cancelToken,\n      withCredentials,\n      xsrfCookieName,\n      xsrfHeaderName,\n      onDownloadProgress,\n      onUploadProgress,\n      auth,\n      validateStatus\n    } = config\n\n    const request = new XMLHttpRequest()\n\n    request.open(method!.toUpperCase(), url!, true)\n\n    configureRequest()\n\n    addEvents()\n\n    processHeaders()\n\n    processCancel()\n\n    request.send(data)\n\n    function configureRequest(): void {\n      if (responseType) {\n        request.responseType = responseType\n      }\n\n      if (timeout) {\n        request.timeout = timeout\n      }\n      if (withCredentials) {\n        request.withCredentials = withCredentials\n      }\n    }\n\n    function addEvents(): void {\n      request.onreadystatechange = function handleLoad() {\n        if (request.readyState !== 4) {\n          return\n        }\n\n        if (request.status === 0) {\n          return\n        }\n\n        const responseHeaders = parseHeaders(request.getAllResponseHeaders())\n        const responseData =\n          responseType && responseType !== 'text' ? request.response : request.responseText\n\n        const response: AxiosResponse = {\n          data: responseData,\n          status: request.status,\n          statusText: request.statusText,\n          headers: responseHeaders,\n          config,\n          request\n        }\n\n        handleResponse(response)\n      }\n      request.onerror = function handleError() {\n        reject(createError('Network Error', config, null, request))\n      }\n\n      request.ontimeout = function handleTimeout() {\n        reject(createError(`Timeout of ${timeout} ms exceeded`, config, 'ECONNABORTED', request))\n      }\n      if (onDownloadProgress) {\n        request.onprogress = onDownloadProgress\n      }\n\n      if (onUploadProgress) {\n        request.upload.onprogress = onUploadProgress\n      }\n    }\n\n    function processHeaders(): void {\n      // 设置xsrf\n      if ((withCredentials || isURLSameOrigin(url!)) && xsrfCookieName) {\n        const xsrfValue = cookie.read(xsrfCookieName)\n        if (xsrfValue && xsrfHeaderName) {\n          headers[xsrfHeaderName] = xsrfValue\n        }\n      }\n\n      if (auth) {\n        headers['Authorization'] = `Basic ${btoa(auth.username + ':' + auth.password)}`\n      }\n\n      if (isFormData(data)) {\n        delete headers['Content-Type']\n      }\n\n      Object.keys(headers).forEach(name => {\n        if (data === null && name.toLowerCase() === 'content-type') {\n          delete headers[name]\n        } else {\n          request.setRequestHeader(name, headers[name])\n        }\n      })\n    }\n\n    function processCancel(): void {\n      if (cancelToken) {\n        cancelToken.promise.then(reason => {\n          request.abort()\n          reject(reason)\n        })\n      }\n    }\n\n    function handleResponse(response: AxiosResponse) {\n      const { status } = response\n      if (!validateStatus || validateStatus(status)) {\n        resolve(response)\n      } else {\n        reject(createError(`Request failed with status code ${status}`, config, null, response))\n      }\n    }\n  })\n}\n","import { AxiosTransformer } from './../types/index'\n\nexport default function transform(\n  data: any,\n  headers: any,\n  fns?: AxiosTransformer | AxiosTransformer[]\n): any {\n  if (!fns) {\n    return data\n  }\n\n  if (!Array.isArray(fns)) {\n    fns = [fns]\n  }\n\n  // 遍历转换数组，依次执行转换函数，拿到最后transform的data\n  fns.forEach(fn => {\n    data = fn(data, headers)\n  })\n\n  return data\n}\n","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport xhr from './xhr'\nimport { buildURL, isAbsoluteURL, combineURL } from '../helpers/url'\nimport { flattenHeaders } from '../helpers/header'\nimport transform from './transform'\n\n/**\n *\n * 发起请求处理函数，对请求配置与响应结果进行处理\n * @param {AxiosRequestConfig} config\n */\nexport default function dispatchRequest(config: AxiosRequestConfig): AxiosPromise {\n  throwIfCancellationRequested(config)\n  processConfig(config)\n  return xhr(config).then(\n    res => {\n      return transformResponseData(res)\n    },\n    e => {\n      if (e && e.response) {\n        e.response = transformResponseData(e.response)\n      }\n      return Promise.reject(e)\n    }\n  )\n}\n\n/**\n *\n * processConfig函数是对config做处理的一个统筹函数，当中分布着处理config各个部分的其他函数\n *\n * @param {AxiosRequestConfig} config\n */\nfunction processConfig(config: AxiosRequestConfig): void {\n  config.url = transformURL(config)\n\n  config.data = transform(config.data, config.headers, config.transformRequest)\n  config.headers = flattenHeaders(config.headers, config.method!)\n}\n\n/**\n *\n * 转换请求的Url\n * @param {AxiosRequestConfig} config\n * @returns {string}\n */\nexport function transformURL(config: AxiosRequestConfig): string {\n  let { url, params, paramsSerializer, baseURL } = config\n  if (baseURL && !isAbsoluteURL(url!)) {\n    url = combineURL(baseURL, url)\n  }\n  return buildURL(url!, params, paramsSerializer)\n}\n\nfunction transformResponseData(res: AxiosResponse): AxiosResponse {\n  res.data = transform(res.data, res.headers, res.config.transformResponse)\n  return res\n}\n\nfunction throwIfCancellationRequested(config: AxiosRequestConfig): void {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequest()\n  }\n}\n","import { ResolvedFn, RejectedFn } from '../types'\n\ninterface Interceptor<T> {\n  resolved: ResolvedFn<T>\n  rejected?: RejectedFn\n}\n\n/**\n * InterceptorManger拦截器管理类\n *\n * @property interceptors 维护一个拦截器对象的数组，为每一个拦截器设置一个唯一标识符，以供eject卸载拦截器使用\n *\n */\nexport default class InterceptorManger<T> {\n  private interceptors: Array<Interceptor<T> | null>\n  constructor() {\n    this.interceptors = []\n  }\n\n  use(resolved: ResolvedFn<T>, rejected?: RejectedFn): number {\n    this.interceptors.push({\n      resolved,\n      rejected\n    })\n    return this.interceptors.length - 1\n  }\n\n  /**\n   * 遍历拦截器数组进行操作\n   * @param fn 接收一个函数参数\n   */\n  forEach(fn: (interceptor: Interceptor<T>) => void): void {\n    this.interceptors.forEach(interceptor => {\n      if (interceptor !== null) {\n        fn(interceptor)\n      }\n    })\n  }\n\n  eject(id: number): void {\n    // 为防止数组顺序混乱，导致获取的id变成可变的值，不直接从数组中删除对象，直接把指定下标位置设为 null 即可\n    if (this.interceptors[id]) {\n      this.interceptors[id] = null\n    }\n  }\n}\n","import { AxiosRequestConfig } from '../types'\nimport { isPlainObject, deepMerge } from '../helpers/util'\n\n/**\n * 默认合并策略，优先取val2的值\n * @param val1 config1[key]\n * @param val2 config2[key]\n */\nfunction defaultStrat(val1: any, val2: any): any {\n  return val2 !== undefined ? val2 : val1\n}\n\n/**\n * 只取val2的值\n * @param val1 config1[key]\n * @param val2 config2[key2]\n */\nfunction fromVal2strat(val1: any, val2: any): any {\n  if (typeof val2 !== undefined) {\n    return val2\n  }\n}\n\n// 策略函数的map对象\nconst strats = Object.create(null)\n\n/**\n * 这三个配置应该是跟请求息息相关的，它是用户自定义去传的，而不能在默认配置里定义\n * 值是应该在默认配置中定义，比如直接通过 axios.defaults. [url || params || data]\n * 但是实际上没有任何意义，因为它不是一个请求的默认值\n * 对于这类请求配置，只取 配置2 中的\n * 所以 stratKeysFromVal2 中定义的配置名称应该指向 fromVal2strat 策略函数\n *\n * 另外一种像 headers 对象，需要做一层deepMerge，而不是conf2 替换 conf1\n */\nconst stratKeysFromVal2 = ['url', 'params', 'data']\nstratKeysFromVal2.forEach(key => {\n  strats[key] = fromVal2strat\n})\n\n/**\n * 深度拷贝\n */\nconst startKeysDeepMerge = ['headers', 'auth']\nstartKeysDeepMerge.forEach(key => {\n  strats[key] = deepMergeStrat\n})\n\nfunction deepMergeStrat(val1: any, val2: any): any {\n  if (isPlainObject(val2)) {\n    return deepMerge(val1, val2)\n  } else if (typeof val2 !== 'undefined') {\n    return val2\n  } else if (isPlainObject(val1)) {\n    return deepMerge(val1)\n  } else {\n    return val1\n  }\n}\n\nexport default function mergeConfig(\n  config1: AxiosRequestConfig,\n  config2?: AxiosRequestConfig\n): AxiosRequestConfig {\n  if (!config2) {\n    config2 = {} as AxiosRequestConfig\n  }\n  const config = Object.create(null)\n\n  for (const key in config2) {\n    mergeField(key)\n  }\n\n  for (const key in config1) {\n    if (!config2[key]) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key: string): void {\n    // 通过key找到对应的合并策略函数，JS 策略模式的一个应用\n    const strat = strats[key] || defaultStrat\n    // 调用策略函数拿到返回结果，并赋值给config对象\n    config[key] = strat(config1[key], config2![key])\n  }\n  return config\n}\n","import {\n  AxiosRequestConfig,\n  AxiosPromise,\n  Method,\n  AxiosResponse,\n  ResolvedFn,\n  RejectedFn\n} from '../types'\nimport dispatchRequest, { transformURL } from './dispatchRequest'\nimport InterceptorManger from '../core/interceptor'\nimport mergeConfig from './mergeConfig'\n\ninterface Interceptors {\n  request: InterceptorManger<AxiosRequestConfig>\n  response: InterceptorManger<AxiosResponse>\n}\n\ninterface PromiseChain<T> {\n  resolved: ResolvedFn<T> | ((config: AxiosRequestConfig) => AxiosPromise)\n  rejected?: RejectedFn\n}\n\n/**\n * Axios请求类\n * 提供语法糖简化发起请求的配置\n */\nexport default class Axios {\n  interceptors: Interceptors\n  defaults: AxiosRequestConfig\n\n  constructor(initConfig: AxiosRequestConfig) {\n    this.defaults = initConfig\n    this.interceptors = {\n      request: new InterceptorManger<AxiosRequestConfig>(),\n      response: new InterceptorManger<AxiosResponse>()\n    }\n  }\n\n  /**\n   * 调用axios实例方法最终都是指向request方法，.get() & .post()只是语法糖的封装，加深易用性\n   * request方法内部使用了函数重载的概念，使其支持传入一个参数，并在运行时做判断，对config参数进行封装\n   *\n   * @param url\n   * @param config\n   */\n  request(url: any, config?: any): AxiosPromise {\n    if (typeof url === 'string') {\n      /**\n       * Example: 单独传入一个 url\n       * axios('api/request/url')\n       */\n      if (!config) {\n        config = {}\n      }\n      config.url = url\n    } else {\n      /**\n       * Example: 此时的 url 是一个对象\n       * axios({\n       *  url:'api/request/url',\n       *  method: 'post'\n       * })\n       */\n      config = url\n    }\n\n    config = mergeConfig(this.defaults, config)\n    config.method = config.method.toLowerCase()\n\n    /**\n     * 初始化Axios拦截器的Promise链\n     * @resolved 请求拦截器先添加的 后 执行，执行顺序与添加顺序是相反的\n     * @rejected 响应拦截器先添加的 先 执行，按照添加顺序依次执行\n     */\n    const chain: PromiseChain<any>[] = [{ resolved: dispatchRequest, rejected: undefined }]\n\n    this.interceptors.request.forEach(interceptor => {\n      chain.unshift(interceptor)\n    })\n\n    this.interceptors.response.forEach(interceptor => {\n      chain.push(interceptor)\n    })\n\n    let promise = Promise.resolve(config)\n\n    while (chain.length) {\n      const { resolved, rejected } = chain.shift()!\n      promise = promise.then(resolved, rejected)\n    }\n\n    /**\n     * Other\n     * Example 1:\n     * axios('api/request/url',{\n     *  method: 'post',\n     *  data: {\n     *    msg:'hello axios'\n     *  }\n     * })\n     *\n     * Example 2:\n     * axios.METHOD_NAME & request ('api/request/url',{\n     *  method: 'post',\n     *  data: {\n     *    msg:'hello axios'\n     *  }\n     * })\n     *\n     */\n    return promise\n  }\n\n  get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('get', url, config)\n  }\n\n  delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('delete', url, config)\n  }\n\n  head(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('head', url, config)\n  }\n\n  options(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('options', url, config)\n  }\n\n  post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('post', url, data, config)\n  }\n\n  put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('put', url, data, config)\n  }\n\n  patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('patch', url, data, config)\n  }\n\n  getUri(config?: AxiosRequestConfig): string {\n    config = mergeConfig(this.defaults, config)\n    return transformURL(config)\n  }\n\n  _requestMethodWithoutData(method: Method, url: string, config?: AxiosRequestConfig) {\n    return this.request(Object.assign(config || {}, { method, url }))\n  }\n\n  _requestMethodWithData(method: Method, url: string, data?: any, config?: AxiosRequestConfig) {\n    return this.request(Object.assign(config || {}, { method, url, data }))\n  }\n}\n","import { isPlainObject } from './util'\n\n/**\n *\n * 转换发送给后端的请求参数\n * @param {AxiosRequestConfig} config\n * @returns {*}\n */\nexport function transformRequest(data: any): any {\n  if (isPlainObject(data)) {\n    return JSON.stringify(data)\n  }\n  return data\n}\n\nexport function transformResponse(data: any): any {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (error) {\n      // do nothing\n    }\n  }\n  return data\n}\n","import { AxiosRequestConfig } from './types/index'\nimport { processHeaders } from './helpers/header'\nimport { transformRequest, transformResponse } from './helpers/data'\n/**\n * Axios 默认配置\n */\nconst defaults: AxiosRequestConfig = {\n  method: 'get',\n\n  timeout: 0,\n\n  headers: {\n    common: {\n      Accept: 'application/json,text/plain, */*'\n    }\n  },\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  transformRequest: [\n    function(data: any, headers: any): any {\n      processHeaders(headers, data)\n      return transformRequest(data)\n    }\n  ],\n\n  transformResponse: [\n    function(data: any): any {\n      return transformResponse(data)\n    }\n  ],\n\n  validateStatus: (status: number): boolean => {\n    return status >= 200 && status < 300\n  }\n}\n\nconst methodNoData = ['delete', 'get', 'head', 'options']\n\nmethodNoData.forEach(method => {\n  defaults.headers[method] = {}\n})\n\nconst methodWithData = ['post', 'put', 'patch']\n\nmethodWithData.forEach(method => {\n  defaults.headers[method] = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n\nexport default defaults\n","/**\n * Cancel类是以axios实例扩展方法的方式挂载到axios上的\n */\nexport default class Cancel {\n  message?: string\n\n  constructor(message?: string) {\n    this.message = message\n  }\n}\n\nexport function isCancel(value: any): boolean {\n  return value instanceof Cancel\n}\n","import { CancelTokenSource, Canceler } from '../types'\nimport { CancelExecutor } from '../types'\nimport Cancel from './cancel'\n\ninterface ResolvePromise {\n  (reason?: Cancel): void\n}\n\n/**\n * CancelToken类是以axios实例扩展方法的方式挂载到axios上的\n */\nexport default class CancelToken {\n  promise: Promise<Cancel>\n  reason?: Cancel\n\n  constructor(executor: CancelExecutor) {\n    let resolvePromise: ResolvePromise\n    this.promise = new Promise<Cancel>(resolve => {\n      resolvePromise = resolve\n    })\n    // 立即执行函数\n    executor(message => {\n      if (this.reason) {\n        return\n      }\n      // reason 参数的值是Cancel函数的实例，后续就可以通过axios.isCancel(this.reason)方法判断reason是不是一个Cancel类型的错误了\n      this.reason = new Cancel(message)\n      resolvePromise(this.reason)\n    })\n  }\n  throwIfRequest() {\n    if (this.reason) {\n      throw this.reason\n    }\n  }\n  // CancelToken的工厂方法\n  static source(): CancelTokenSource {\n    let cancel!: Canceler\n    const token = new CancelToken(c => {\n      cancel = c\n    })\n\n    return { cancel, token }\n  }\n}\n","import { AxiosRequestConfig } from './types/index'\nimport { AxiosStatic } from './types'\nimport Axios from './core/Axios'\nimport { extend } from './helpers/util'\nimport defaults from './defaults'\nimport mergeConfig from './core/mergeConfig'\nimport CancelToken from './cancel/cancelToken'\nimport Cancel, { isCancel } from './cancel/cancel'\n\n/**\n * 实例化axios请求实例，并将Axios类的公共方法继承过来\n *\n * 因为axios接口跟axios上的request接口接收的参数是一样的，所以直接将axios原型上的request方法赋值给instance变量\n * 这里的instance首先是一个函数，可直接这样使用 instance(AxiosRequestConfig接口定义的配置) 发起请求\n * 使用extend方法将axios实例原型上的方法拷贝一份到instance上，实现axios工厂函数的创建\n */\nfunction createInstance(config: AxiosRequestConfig): AxiosStatic {\n  // 1.创建axios实例对象\n  const context = new Axios(config)\n\n  // 2. 直接将Axios类上的request方法赋值给一个普通变量\n  const instance = Axios.prototype.request.bind(context)\n\n  // 3. 调用extend方法将Axios实例原型上的方法拷贝给instance方法\n  extend(instance, context)\n\n  return instance as AxiosStatic\n}\n\nconst axios = createInstance(defaults)\n\n// 扩展axios实例的属性跟方法\naxios.create = function create(config) {\n  return createInstance(mergeConfig(defaults, config))\n}\n\naxios.CancelToken = CancelToken\naxios.Cancel = Cancel\naxios.isCancel = isCancel\n\naxios.all = function all(promises) {\n  return Promise.all(promises)\n}\n\naxios.spread = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr)\n  }\n}\n\naxios.Axios = Axios\n\nexport default axios\n"],"names":["processHeaders"],"mappings":"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"}