{"version":3,"file":"axios.es5.js","sources":["../src/helpers/util.ts","../src/helpers/header.ts","../src/helpers/error.ts","../src/helpers/url.ts","../src/helpers/cookie.ts","../src/core/xhr.ts","../src/core/transform.ts","../src/core/dispatchRequest.ts","../src/core/interceptor.ts","../src/core/mergeConfig.ts","../src/core/Axios.ts","../src/helpers/data.ts","../src/defaults.ts","../src/cancel/cancel.ts","../src/cancel/cancelToken.ts","../src/axios.ts"],"sourcesContent":["import { URLSearchParams } from 'url'\n\n// 判断数据类型\nconst toString = Object.prototype.toString\n\n/**\n * val is xxx 是ts中的类型保护语法，将参数默认为某个数据类型，并拥有该类型的特性以及使用其相关方法\n */\n\n/**\n *\n * 日期类型\n * @export\n * @param {*} val\n * @returns {val is Date}\n */\nexport function isDate(val: any): val is Date {\n  return toString.call(val) === '[object Date]'\n}\n\n/**\n *\n * 对象类型\n * @export\n * @param {*} val\n * @returns {val is Object}\n */\nexport function isObject(val: any): val is Object {\n  return val !== null && typeof val === 'object'\n}\n/**\n *\n * 判断是不是普通对象，因为formData,arrayBuffer这些类型的参数使用isObject判断都是一个对象\n * @export\n * @param {*} val\n * @returns {val is Object}\n */\nexport function isPlainObject(val: any): val is Object {\n  return toString.call(val) === '[object Object]'\n}\n\nexport function isFormData(val: any): val is FormData {\n  return typeof val !== null && val instanceof window.FormData\n}\n\nexport function isURLSearchParams(val: any): val is URLSearchParams {\n  return typeof val !== 'undefined' && val instanceof window.URLSearchParams\n}\n\n/**\n * 使用TS的交叉类型，定义两个泛型，将from中的属性拷贝到to中，并使用类型断言确定数据类型\n * @param to\n * @param from\n */\nexport function extend<T, U>(to: T, from: U): T & U {\n  for (const key in from) {\n    ;(to as T & U)[key] = from[key] as any\n  }\n\n  return to as T & U\n}\n\n/**\n * 对象深拷贝\n * @param objs 被拷贝的多个对象\n */\nexport function deepMerge(...objs: any[]): any {\n  const result = Object.create(null)\n\n  objs.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        const val = obj[key]\n        // val可能又是一个对象，需要递归处理\n        if (isPlainObject(val)) {\n          // result[key]是否已经存在并且是一个对象，已存在并且是一个对象的话，把对象跟值一起作为被拷贝的一部分传入\n          if (isPlainObject(result[key])) {\n            result[key] = deepMerge(result[key], val)\n          } else {\n            result[key] = deepMerge(val)\n          }\n        } else {\n          result[key] = val\n        }\n      })\n    }\n  })\n\n  return result\n}\n","import { isPlainObject, deepMerge } from './util'\nimport { Method } from '../types'\n\n/**\n * 格式化header请求头参数\n * @param headers 请求头参数对象\n * @param normalizeName 要格式化的数据value名称\n */\nfunction normalizeHeaderName(headers: any, normalizeName: string): void {\n  if (!headers) {\n    return\n  }\n  Object.keys(headers).forEach(name => {\n    if (name !== normalizeName && name.toUpperCase() === normalizeName.toUpperCase()) {\n      headers[normalizeName] = headers[name]\n      delete headers[name]\n    }\n  })\n}\n\n/**\n * 设置默认的请求头 & 规范化请求头\n * 根据传递到后端的data来设置默认的请求头数据\n * @param headers 请求头参数对象\n * @param data 请求头数据\n */\nexport function processHeaders(headers: any, data: any): any {\n  normalizeHeaderName(headers, 'Content-Type')\n  if (isPlainObject(data)) {\n    if (headers && !headers['Content-Type']) {\n      headers['Content-Type'] = 'application/json;charset=utf-8'\n    }\n  }\n  return headers\n}\n\n/**\n * 格式化响应headers的数据，数据通过req.getAllResponseHeaders()方法得来\n * @param headers 以回车符与换行符分割的字符串\n * params example :\n * `\n *  date: Fri, 05 Apr 2019 12:40:49 GMT\\r\\n\n *  etag: W/\"d-Ssxx4FRxEutDLwo2+xkkxKc4y0k\"\\r\\n\n *  connection: keep-alive\\r\\n\n *  x-powered-by: Express\\r\\n\n *  content-length: 13\\r\\n\n *  content-type: application/json; charset=utf-8\\r\\n\n * `\n */\nexport function parseHeaders(headers: string): any {\n  let parsed = Object.create(null)\n  if (!headers) {\n    return parsed\n  }\n\n  headers.split('\\r\\n').forEach(line => {\n    let [key, ...values] = line.split(':')\n    key = key.trim().toLowerCase()\n    if (!key) {\n      return\n    }\n    const val = values.join(':').trim()\n\n    parsed[key] = val\n  })\n  return parsed\n}\n\n/**\n * 在defaults对象中定义的默认配置是可以从 请求方法的维度 进行配置的，就是针对不同请求有各自的公共配置\n * 在不同请求方法下应该把此次请求所需要的header提取出来，其他的则删除掉\n * @param headers 请求的headers\n * @param method 请求的method\n */\nexport function flattenHeaders(headers: any, method: Method): any {\n  if (!headers) {\n    return headers\n  }\n  headers = deepMerge(headers.common, headers[method], headers)\n  const methodsToDelete = ['delete', 'get', 'head', 'options', 'post', 'put', 'patch', 'common']\n  methodsToDelete.forEach(method => {\n    delete headers[method]\n  })\n\n  return headers\n}\n","import { AxiosRequestConfig, AxiosResponse } from '../types'\n\nexport class AxiosError extends Error {\n  isAxiosError: boolean\n  config: AxiosRequestConfig\n  code?: string | null\n  request?: any\n  response?: AxiosResponse\n\n  constructor(\n    message: string,\n    config: AxiosRequestConfig,\n    code?: string | null,\n    request?: any,\n    response?: AxiosResponse\n  ) {\n    super(message)\n\n    this.config = config\n    this.code = code\n    this.request = request\n    this.response = response\n    this.isAxiosError = true\n\n    Object.setPrototypeOf(this, AxiosError.prototype)\n  }\n}\n\nexport function createError(\n  message: string,\n  config: AxiosRequestConfig,\n  code?: string | null,\n  request?: any,\n  response?: AxiosResponse\n): AxiosError {\n  const error = new AxiosError(message, config, code, request, response)\n  return error\n}\n","import { isDate, isPlainObject, isURLSearchParams } from './util'\n\n/**\n *\n * 参数编码函数,对于特殊字符需要做一层替换处理\n * 对于字符 @、:、$、,、[、]、 是允许出现在 url 中的，不希望被 encode\n * @param {string} val\n * @returns {string}\n */\nfunction encode(val: string): string {\n  return encodeURIComponent(val)\n    .replace(/%40/g, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\n/**\n *\n * 处理请求url参数\n * @export\n * @param {string} url\n * @param {*} [params]\n * @returns {string}\n */\nexport function buildURL(\n  url: string,\n  params?: any,\n  paramsSerializer?: (params: any) => string\n): string {\n  if (!params) {\n    return url\n  }\n\n  let serializeParams\n\n  if (paramsSerializer) {\n    serializeParams = paramsSerializer(params)\n  } else if (isURLSearchParams(params)) {\n    serializeParams = params.toString()\n  } else {\n    const parts: string[] = []\n    Object.keys(params).forEach(key => {\n      const val = params[key]\n      if (val === null || typeof val === 'undefined') {\n        return\n      }\n      let values = []\n      // 参数有可能是一个数组\n      if (Array.isArray(val)) {\n        values = val\n        key += '[]'\n      } else {\n        // 变成一个数组做统一处理\n        values = [val]\n      }\n      values.forEach(val => {\n        if (isDate(val)) {\n          val = val.toISOString()\n        } else if (isPlainObject(val)) {\n          val = JSON.stringify(val)\n        }\n        parts.push(`${encode(key)}=${encode(val)}`)\n      })\n    })\n\n    serializeParams = parts.join('&')\n  }\n\n  if (serializeParams) {\n    // 丢弃 url 中的哈希标记\n    const markIndex = url.indexOf('#')\n    if (markIndex !== -1) {\n      url = url.slice(0, markIndex)\n    }\n    // 有可能url上已经带有参数了，判断条件就是看下是否含有问号,没有则加？，否则往现有url后面添加&\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializeParams\n  }\n  return url\n}\n\ninterface URLOrigin {\n  protocol: string\n  host: string\n}\n\n/**\n * 是否是同源请求的判断函数\n * @param requestURL url链接\n */\nexport function isURLSameOrigin(requestURL: string): boolean {\n  const parsedOrigin = resolveURL(requestURL)\n  return (\n    parsedOrigin.protocol === currentOrigin.protocol && parsedOrigin.host === currentOrigin.host\n  )\n}\n\nconst currentOrigin = resolveURL(window.location.href)\n\nfunction resolveURL(url: string): URLOrigin {\n  const urlParsingNode = document.createElement('a')\n  urlParsingNode.setAttribute('href', url)\n  const { protocol, host } = urlParsingNode\n  return {\n    protocol,\n    host\n  }\n}\n\nexport function isAbsoluteURL(url: string): boolean {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n}\n\nexport function combineURL(baseURL: string, relativeURL?: string): string {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL\n}\n","const cookie = {\n  read(name: string): string | null {\n    const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'))\n    return match ? decodeURIComponent(match[3]) : null\n  }\n}\n\nexport default cookie\n","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport { parseHeaders } from '../helpers/header'\nimport { createError } from '../helpers/error'\nimport { isURLSameOrigin } from '../helpers/url'\nimport cookie from '../helpers/cookie'\nimport { isFormData } from '../helpers/util'\n\n/**\n * 基于XMLHttpRequest对象封装请求函数\n * @param {AxiosRequestConfig} config 请求配置【包括请求参数，请求url，请求方式，请求头，响应类型，请求超时时间】\n */\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise {\n  return new Promise((resolve, reject) => {\n    const {\n      data = null,\n      url,\n      method,\n      headers = {},\n      responseType,\n      timeout,\n      cancelToken,\n      withCredentials,\n      xsrfCookieName,\n      xsrfHeaderName,\n      onDownloadProgress,\n      onUploadProgress,\n      auth,\n      validateStatus\n    } = config\n\n    const request = new XMLHttpRequest()\n\n    request.open(method!.toUpperCase(), url!, true)\n\n    configureRequest()\n\n    addEvents()\n\n    processHeaders()\n\n    processCancel()\n\n    request.send(data)\n\n    function configureRequest(): void {\n      if (responseType) {\n        request.responseType = responseType\n      }\n\n      if (timeout) {\n        request.timeout = timeout\n      }\n      if (withCredentials) {\n        request.withCredentials = withCredentials\n      }\n    }\n\n    function addEvents(): void {\n      request.onreadystatechange = function handleLoad() {\n        if (request.readyState !== 4) {\n          return\n        }\n\n        if (request.status === 0) {\n          return\n        }\n\n        const responseHeaders = parseHeaders(request.getAllResponseHeaders())\n        const responseData =\n          responseType && responseType !== 'text' ? request.response : request.responseText\n\n        const response: AxiosResponse = {\n          data: responseData,\n          status: request.status,\n          statusText: request.statusText,\n          headers: responseHeaders,\n          config,\n          request\n        }\n\n        handleResponse(response)\n      }\n      request.onerror = function handleError() {\n        reject(createError('Network Error', config, null, request))\n      }\n\n      request.ontimeout = function handleTimeout() {\n        reject(createError(`Timeout of ${timeout} ms exceeded`, config, 'ECONNABORTED', request))\n      }\n      if (onDownloadProgress) {\n        request.onprogress = onDownloadProgress\n      }\n\n      if (onUploadProgress) {\n        request.upload.onprogress = onUploadProgress\n      }\n    }\n\n    function processHeaders(): void {\n      // 设置xsrf\n      if ((withCredentials || isURLSameOrigin(url!)) && xsrfCookieName) {\n        const xsrfValue = cookie.read(xsrfCookieName)\n        if (xsrfValue && xsrfHeaderName) {\n          headers[xsrfHeaderName] = xsrfValue\n        }\n      }\n\n      if (auth) {\n        headers['Authorization'] = `Basic ${btoa(auth.username + ':' + auth.password)}`\n      }\n\n      if (isFormData(data)) {\n        delete headers['Content-Type']\n      }\n\n      Object.keys(headers).forEach(name => {\n        if (data === null && name.toLowerCase() === 'content-type') {\n          delete headers[name]\n        } else {\n          request.setRequestHeader(name, headers[name])\n        }\n      })\n    }\n\n    function processCancel(): void {\n      if (cancelToken) {\n        cancelToken.promise.then(reason => {\n          request.abort()\n          reject(reason)\n        })\n      }\n    }\n\n    function handleResponse(response: AxiosResponse) {\n      const { status } = response\n      if (!validateStatus || validateStatus(status)) {\n        resolve(response)\n      } else {\n        reject(createError(`Request failed with status code ${status}`, config, null, response))\n      }\n    }\n  })\n}\n","import { AxiosTransformer } from './../types/index'\n\nexport default function transform(\n  data: any,\n  headers: any,\n  fns?: AxiosTransformer | AxiosTransformer[]\n): any {\n  if (!fns) {\n    return data\n  }\n\n  if (!Array.isArray(fns)) {\n    fns = [fns]\n  }\n\n  // 遍历转换数组，依次执行转换函数，拿到最后transform的data\n  fns.forEach(fn => {\n    data = fn(data, headers)\n  })\n\n  return data\n}\n","import { AxiosRequestConfig, AxiosPromise, AxiosResponse } from '../types'\nimport xhr from './xhr'\nimport { buildURL, isAbsoluteURL, combineURL } from '../helpers/url'\nimport { flattenHeaders } from '../helpers/header'\nimport transform from './transform'\n\n/**\n *\n * 发起请求处理函数，对请求配置与响应结果进行处理\n * @param {AxiosRequestConfig} config\n */\nexport default function dispatchRequest(config: AxiosRequestConfig): AxiosPromise {\n  throwIfCancellationRequested(config)\n  processConfig(config)\n  return xhr(config).then(\n    res => {\n      return transformResponseData(res)\n    },\n    e => {\n      if (e && e.response) {\n        e.response = transformResponseData(e.response)\n      }\n      return Promise.reject(e)\n    }\n  )\n}\n\n/**\n *\n * processConfig函数是对config做处理的一个统筹函数，当中分布着处理config各个部分的其他函数\n *\n * @param {AxiosRequestConfig} config\n */\nfunction processConfig(config: AxiosRequestConfig): void {\n  config.url = transformURL(config)\n\n  config.data = transform(config.data, config.headers, config.transformRequest)\n  config.headers = flattenHeaders(config.headers, config.method!)\n}\n\n/**\n *\n * 转换请求的Url\n * @param {AxiosRequestConfig} config\n * @returns {string}\n */\nexport function transformURL(config: AxiosRequestConfig): string {\n  let { url, params, paramsSerializer, baseURL } = config\n  if (baseURL && !isAbsoluteURL(url!)) {\n    url = combineURL(baseURL, url)\n  }\n  return buildURL(url!, params, paramsSerializer)\n}\n\nfunction transformResponseData(res: AxiosResponse): AxiosResponse {\n  res.data = transform(res.data, res.headers, res.config.transformResponse)\n  return res\n}\n\nfunction throwIfCancellationRequested(config: AxiosRequestConfig): void {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequest()\n  }\n}\n","import { ResolvedFn, RejectedFn } from '../types'\n\ninterface Interceptor<T> {\n  resolved: ResolvedFn<T>\n  rejected?: RejectedFn\n}\n\n/**\n * InterceptorManger拦截器管理类\n *\n * @property interceptors 维护一个拦截器对象的数组，为每一个拦截器设置一个唯一标识符，以供eject卸载拦截器使用\n *\n */\nexport default class InterceptorManger<T> {\n  private interceptors: Array<Interceptor<T> | null>\n  constructor() {\n    this.interceptors = []\n  }\n\n  use(resolved: ResolvedFn<T>, rejected?: RejectedFn): number {\n    this.interceptors.push({\n      resolved,\n      rejected\n    })\n    return this.interceptors.length - 1\n  }\n\n  /**\n   * 遍历拦截器数组进行操作\n   * @param fn 接收一个函数参数\n   */\n  forEach(fn: (interceptor: Interceptor<T>) => void): void {\n    this.interceptors.forEach(interceptor => {\n      if (interceptor !== null) {\n        fn(interceptor)\n      }\n    })\n  }\n\n  eject(id: number): void {\n    // 为防止数组顺序混乱，导致获取的id变成可变的值，不直接从数组中删除对象，直接把指定下标位置设为 null 即可\n    if (this.interceptors[id]) {\n      this.interceptors[id] = null\n    }\n  }\n}\n","import { AxiosRequestConfig } from '../types'\nimport { isPlainObject, deepMerge } from '../helpers/util'\n\n/**\n * 默认合并策略，优先取val2的值\n * @param val1 config1[key]\n * @param val2 config2[key]\n */\nfunction defaultStrat(val1: any, val2: any): any {\n  return val2 !== undefined ? val2 : val1\n}\n\n/**\n * 只取val2的值\n * @param val1 config1[key]\n * @param val2 config2[key2]\n */\nfunction fromVal2strat(val1: any, val2: any): any {\n  if (typeof val2 !== undefined) {\n    return val2\n  }\n}\n\n// 策略函数的map对象\nconst strats = Object.create(null)\n\n/**\n * 这三个配置应该是跟请求息息相关的，它是用户自定义去传的，而不能在默认配置里定义\n * 值是应该在默认配置中定义，比如直接通过 axios.defaults. [url || params || data]\n * 但是实际上没有任何意义，因为它不是一个请求的默认值\n * 对于这类请求配置，只取 配置2 中的\n * 所以 stratKeysFromVal2 中定义的配置名称应该指向 fromVal2strat 策略函数\n *\n * 另外一种像 headers 对象，需要做一层deepMerge，而不是conf2 替换 conf1\n */\nconst stratKeysFromVal2 = ['url', 'params', 'data']\nstratKeysFromVal2.forEach(key => {\n  strats[key] = fromVal2strat\n})\n\n/**\n * 深度拷贝\n */\nconst startKeysDeepMerge = ['headers', 'auth']\nstartKeysDeepMerge.forEach(key => {\n  strats[key] = deepMergeStrat\n})\n\nfunction deepMergeStrat(val1: any, val2: any): any {\n  if (isPlainObject(val2)) {\n    return deepMerge(val1, val2)\n  } else if (typeof val2 !== 'undefined') {\n    return val2\n  } else if (isPlainObject(val1)) {\n    return deepMerge(val1)\n  } else {\n    return val1\n  }\n}\n\nexport default function mergeConfig(\n  config1: AxiosRequestConfig,\n  config2?: AxiosRequestConfig\n): AxiosRequestConfig {\n  if (!config2) {\n    config2 = {} as AxiosRequestConfig\n  }\n  const config = Object.create(null)\n\n  for (const key in config2) {\n    mergeField(key)\n  }\n\n  for (const key in config1) {\n    if (!config2[key]) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key: string): void {\n    // 通过key找到对应的合并策略函数，JS 策略模式的一个应用\n    const strat = strats[key] || defaultStrat\n    // 调用策略函数拿到返回结果，并赋值给config对象\n    config[key] = strat(config1[key], config2![key])\n  }\n  return config\n}\n","import {\n  AxiosRequestConfig,\n  AxiosPromise,\n  Method,\n  AxiosResponse,\n  ResolvedFn,\n  RejectedFn\n} from '../types'\nimport dispatchRequest, { transformURL } from './dispatchRequest'\nimport InterceptorManger from '../core/interceptor'\nimport mergeConfig from './mergeConfig'\n\ninterface Interceptors {\n  request: InterceptorManger<AxiosRequestConfig>\n  response: InterceptorManger<AxiosResponse>\n}\n\ninterface PromiseChain<T> {\n  resolved: ResolvedFn<T> | ((config: AxiosRequestConfig) => AxiosPromise)\n  rejected?: RejectedFn\n}\n\n/**\n * Axios请求类\n * 提供语法糖简化发起请求的配置\n */\nexport default class Axios {\n  interceptors: Interceptors\n  defaults: AxiosRequestConfig\n\n  constructor(initConfig: AxiosRequestConfig) {\n    this.defaults = initConfig\n    this.interceptors = {\n      request: new InterceptorManger<AxiosRequestConfig>(),\n      response: new InterceptorManger<AxiosResponse>()\n    }\n  }\n\n  /**\n   * 调用axios实例方法最终都是指向request方法，.get() & .post()只是语法糖的封装，加深易用性\n   * request方法内部使用了函数重载的概念，使其支持传入一个参数，并在运行时做判断，对config参数进行封装\n   *\n   * @param url\n   * @param config\n   */\n  request(url: any, config?: any): AxiosPromise {\n    if (typeof url === 'string') {\n      /**\n       * Example: 单独传入一个 url\n       * axios('api/request/url')\n       */\n      if (!config) {\n        config = {}\n      }\n      config.url = url\n    } else {\n      /**\n       * Example: 此时的 url 是一个对象\n       * axios({\n       *  url:'api/request/url',\n       *  method: 'post'\n       * })\n       */\n      config = url\n    }\n\n    config = mergeConfig(this.defaults, config)\n    config.method = config.method.toLowerCase()\n\n    /**\n     * 初始化Axios拦截器的Promise链\n     * @resolved 请求拦截器先添加的 后 执行，执行顺序与添加顺序是相反的\n     * @rejected 响应拦截器先添加的 先 执行，按照添加顺序依次执行\n     */\n    const chain: PromiseChain<any>[] = [{ resolved: dispatchRequest, rejected: undefined }]\n\n    this.interceptors.request.forEach(interceptor => {\n      chain.unshift(interceptor)\n    })\n\n    this.interceptors.response.forEach(interceptor => {\n      chain.push(interceptor)\n    })\n\n    let promise = Promise.resolve(config)\n\n    while (chain.length) {\n      const { resolved, rejected } = chain.shift()!\n      promise = promise.then(resolved, rejected)\n    }\n\n    /**\n     * Other\n     * Example 1:\n     * axios('api/request/url',{\n     *  method: 'post',\n     *  data: {\n     *    msg:'hello axios'\n     *  }\n     * })\n     *\n     * Example 2:\n     * axios.METHOD_NAME & request ('api/request/url',{\n     *  method: 'post',\n     *  data: {\n     *    msg:'hello axios'\n     *  }\n     * })\n     *\n     */\n    return promise\n  }\n\n  get(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('get', url, config)\n  }\n\n  delete(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('delete', url, config)\n  }\n\n  head(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('head', url, config)\n  }\n\n  options(url: string, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithoutData('options', url, config)\n  }\n\n  post(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('post', url, data, config)\n  }\n\n  put(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('put', url, data, config)\n  }\n\n  patch(url: string, data?: any, config?: AxiosRequestConfig): AxiosPromise {\n    return this._requestMethodWithData('patch', url, data, config)\n  }\n\n  getUri(config?: AxiosRequestConfig): string {\n    config = mergeConfig(this.defaults, config)\n    return transformURL(config)\n  }\n\n  _requestMethodWithoutData(method: Method, url: string, config?: AxiosRequestConfig) {\n    return this.request(Object.assign(config || {}, { method, url }))\n  }\n\n  _requestMethodWithData(method: Method, url: string, data?: any, config?: AxiosRequestConfig) {\n    return this.request(Object.assign(config || {}, { method, url, data }))\n  }\n}\n","import { isPlainObject } from './util'\n\n/**\n *\n * 转换发送给后端的请求参数\n * @param {AxiosRequestConfig} config\n * @returns {*}\n */\nexport function transformRequest(data: any): any {\n  if (isPlainObject(data)) {\n    return JSON.stringify(data)\n  }\n  return data\n}\n\nexport function transformResponse(data: any): any {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data)\n    } catch (error) {\n      // do nothing\n    }\n  }\n  return data\n}\n","import { AxiosRequestConfig } from './types/index'\nimport { processHeaders } from './helpers/header'\nimport { transformRequest, transformResponse } from './helpers/data'\n/**\n * Axios 默认配置\n */\nconst defaults: AxiosRequestConfig = {\n  method: 'get',\n\n  timeout: 0,\n\n  headers: {\n    common: {\n      Accept: 'application/json,text/plain, */*'\n    }\n  },\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  transformRequest: [\n    function(data: any, headers: any): any {\n      processHeaders(headers, data)\n      return transformRequest(data)\n    }\n  ],\n\n  transformResponse: [\n    function(data: any): any {\n      return transformResponse(data)\n    }\n  ],\n\n  validateStatus: (status: number): boolean => {\n    return status >= 200 && status < 300\n  }\n}\n\nconst methodNoData = ['delete', 'get', 'head', 'options']\n\nmethodNoData.forEach(method => {\n  defaults.headers[method] = {}\n})\n\nconst methodWithData = ['post', 'put', 'patch']\n\nmethodWithData.forEach(method => {\n  defaults.headers[method] = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }\n})\n\nexport default defaults\n","/**\n * Cancel类是以axios实例扩展方法的方式挂载到axios上的\n */\nexport default class Cancel {\n  message?: string\n\n  constructor(message?: string) {\n    this.message = message\n  }\n}\n\nexport function isCancel(value: any): boolean {\n  return value instanceof Cancel\n}\n","import { CancelTokenSource, Canceler } from '../types'\nimport { CancelExecutor } from '../types'\nimport Cancel from './cancel'\n\ninterface ResolvePromise {\n  (reason?: Cancel): void\n}\n\n/**\n * CancelToken类是以axios实例扩展方法的方式挂载到axios上的\n */\nexport default class CancelToken {\n  promise: Promise<Cancel>\n  reason?: Cancel\n\n  constructor(executor: CancelExecutor) {\n    let resolvePromise: ResolvePromise\n    this.promise = new Promise<Cancel>(resolve => {\n      resolvePromise = resolve\n    })\n    // 立即执行函数\n    executor(message => {\n      if (this.reason) {\n        return\n      }\n      // reason 参数的值是Cancel函数的实例，后续就可以通过axios.isCancel(this.reason)方法判断reason是不是一个Cancel类型的错误了\n      this.reason = new Cancel(message)\n      resolvePromise(this.reason)\n    })\n  }\n  throwIfRequest() {\n    if (this.reason) {\n      throw this.reason\n    }\n  }\n  // CancelToken的工厂方法\n  static source(): CancelTokenSource {\n    let cancel!: Canceler\n    const token = new CancelToken(c => {\n      cancel = c\n    })\n\n    return { cancel, token }\n  }\n}\n","import { AxiosRequestConfig } from './types/index'\nimport { AxiosStatic } from './types'\nimport Axios from './core/Axios'\nimport { extend } from './helpers/util'\nimport defaults from './defaults'\nimport mergeConfig from './core/mergeConfig'\nimport CancelToken from './cancel/cancelToken'\nimport Cancel, { isCancel } from './cancel/cancel'\n\n/**\n * 实例化axios请求实例，并将Axios类的公共方法继承过来\n *\n * 因为axios接口跟axios上的request接口接收的参数是一样的，所以直接将axios原型上的request方法赋值给instance变量\n * 这里的instance首先是一个函数，可直接这样使用 instance(AxiosRequestConfig接口定义的配置) 发起请求\n * 使用extend方法将axios实例原型上的方法拷贝一份到instance上，实现axios工厂函数的创建\n */\nfunction createInstance(config: AxiosRequestConfig): AxiosStatic {\n  // 1.创建axios实例对象\n  const context = new Axios(config)\n\n  // 2. 直接将Axios类上的request方法赋值给一个普通变量\n  const instance = Axios.prototype.request.bind(context)\n\n  // 3. 调用extend方法将Axios实例原型上的方法拷贝给instance方法\n  extend(instance, context)\n\n  return instance as AxiosStatic\n}\n\nconst axios = createInstance(defaults)\n\n// 扩展axios实例的属性跟方法\naxios.create = function create(config) {\n  return createInstance(mergeConfig(defaults, config))\n}\n\naxios.CancelToken = CancelToken\naxios.Cancel = Cancel\naxios.isCancel = isCancel\n\naxios.all = function all(promises) {\n  return Promise.all(promises)\n}\n\naxios.spread = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr)\n  }\n}\n\naxios.Axios = Axios\n\nexport default axios\n"],"names":["processHeaders"],"mappings":"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"}